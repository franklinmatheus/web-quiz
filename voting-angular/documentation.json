{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-691bfbb4619ababa519dea8732d27a47",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  <voting-card\n    [title]=\"title\"\n    [state]=\"state\"\n    [votes]=\"votes\"\n  ></voting-card>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "state",
                    "defaultValue": "'open'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "title",
                    "defaultValue": "'Pink Floyd é a melhor banda de Rock britânica?'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "votes",
                    "defaultValue": "[{'option':'Sim','count':10},{'option':'Não','count':2}]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div>\n      <voting-card \n        [title]=\"title\" \n        [state]=\"state\"\n        [votes]=\"votes\"\n      ></voting-card>\n    </div>\n  `\n})\n\nexport class AppComponent {\n  title = 'Pink Floyd é a melhor banda de Rock britânica?'\n  state = 'open'\n  votes = [{'option':'Sim','count':10},{'option':'Não','count':2}]\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "VotingBoothComponent",
            "id": "component-VotingBoothComponent-5c6acd3fa435e8a1d6b5a50225c66bb3",
            "file": "src/app/voting-booth/voting-booth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "voting-booth",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./voting-booth.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "options",
                    "line": 9,
                    "type": "literal type[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "vote",
                    "defaultValue": "new EventEmitter<number>()",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'voting-booth',\n  templateUrl: './voting-booth.component.html'\n})\n\nexport class VotingBoothComponent {\n  @Input() options: {}[]\n  @Output() vote = new EventEmitter<number>()\n  constructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "templateData": "<div>\n    <button\n      *ngFor=\"let option of options; index as i\"\n      (click)=\"vote.emit(i)\"\n    >\n      {{ option.option }}\n    </button>\n</div>"
        },
        {
            "name": "VotingCardComponent",
            "id": "component-VotingCardComponent-ab315954459b9ce6a3dda7286007ea13",
            "file": "src/app/voting-card/voting-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "voting-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./voting-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "state",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "votes",
                    "line": 11,
                    "type": "literal type[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "vote",
                    "args": [
                        {
                            "name": "voteIndex",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "voteIndex",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'voting-card',\n  templateUrl: './voting-card.component.html'\n})\n\nexport class VotingCardComponent {\n  @Input() title: string\n  @Input() state: string\n  @Input() votes: {}[]\n  constructor() { }\n\n  vote(voteIndex: number) {\n    this.votes[voteIndex]['count'] = this.votes[voteIndex]['count'] + 1\n    this.state = 'closed'\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "templateData": "<div class=\"vote card\" [ngClass]=\"{ result: state === 'closed' }\">\n    <h3><b>{{ title }}</b></h3>\n    <ng-container *ngIf=\"state === 'open'; else second\">\n        <voting-booth [options]=\"votes\" (vote)=\"vote($event)\"></voting-booth>\n    </ng-container>\n    <ng-template #second>\n        <ng-container *ngIf=\"state === 'closed'; else third\">\n            <voting-result [votes]=\"votes\"></voting-result>\n        </ng-container>\n    </ng-template>\n    <ng-template #third>\n        <p>[wrong state] {{ state }}</p>\n    </ng-template>\n</div>\n"
        },
        {
            "name": "VotingResultComponent",
            "id": "component-VotingResultComponent-80ca8659e5e9d5df18bd027dba6ccd11",
            "file": "src/app/voting-result/voting-result.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "voting-result",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./voting-result.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "votes",
                    "line": 9,
                    "type": "literal type[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "perc",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'voting-result',\n  templateUrl: './voting-result.component.html'\n})\n\nexport class VotingResultComponent {\n  @Input() votes: {}[]\n  constructor() { }\n\n  perc(index: number) {\n    let total = this.votes.reduce((sum, item) => {return sum + item['count']}, 0)\n    return (this.votes[index]['count']/total*100).toFixed(2)       \n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "templateData": "<div>\n  <ol>\n    <li\n\t\t\t*ngFor=\"let item of votes; index as index\"\n    >\n\t\t\t{{ item.option }}: {{ item.count }} votes ({{ perc(index) }}%)\n    </li>\n\t</ol>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "VotingBoothComponent"
                        },
                        {
                            "name": "VotingCardComponent"
                        },
                        {
                            "name": "VotingResultComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "PinkFloyd",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/voting-card/voting-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/voting-booth/voting-booth.stories.ts",
                "type": "Story<VotingBoothComponent>",
                "defaultValue": "(args: VotingBoothComponent) => ({\r\n    component: VotingBoothComponent,\r\n    props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/voting-card/voting-card.stories.ts",
                "type": "Story<VotingCardComponent>",
                "defaultValue": "(args: VotingCardComponent) => ({\r\n    component: VotingCardComponent,\r\n    props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/voting-result/voting-result.stories.ts",
                "type": "Story<VotingResultComponent>",
                "defaultValue": "(args: VotingResultComponent) => ({\r\n    component: VotingResultComponent,\r\n    props: args,\r\n})"
            },
            {
                "name": "YesNo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/voting-booth/voting-booth.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "YesNo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/voting-result/voting-result.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/voting-card/voting-card.stories.ts": [
                {
                    "name": "PinkFloyd",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/voting-card/voting-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/voting-card/voting-card.stories.ts",
                    "type": "Story<VotingCardComponent>",
                    "defaultValue": "(args: VotingCardComponent) => ({\r\n    component: VotingCardComponent,\r\n    props: args,\r\n})"
                }
            ],
            "src/app/voting-booth/voting-booth.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/voting-booth/voting-booth.stories.ts",
                    "type": "Story<VotingBoothComponent>",
                    "defaultValue": "(args: VotingBoothComponent) => ({\r\n    component: VotingBoothComponent,\r\n    props: args,\r\n})"
                },
                {
                    "name": "YesNo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/voting-booth/voting-booth.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/voting-result/voting-result.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/voting-result/voting-result.stories.ts",
                    "type": "Story<VotingResultComponent>",
                    "defaultValue": "(args: VotingResultComponent) => ({\r\n    component: VotingResultComponent,\r\n    props: args,\r\n})"
                },
                {
                    "name": "YesNo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/voting-result/voting-result.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/voting-booth/voting-booth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VotingBoothComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/voting-booth/voting-booth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/voting-booth/voting-booth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "YesNo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/voting-card/voting-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VotingCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/voting-card/voting-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PinkFloyd",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/voting-card/voting-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/voting-result/voting-result.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VotingResultComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/voting-result/voting-result.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/voting-result/voting-result.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "YesNo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}